[{"/home/mohammad/stuff/projects/react-projects/ecommerce/src/index.js":"1","/home/mohammad/stuff/projects/react-projects/ecommerce/src/App.js":"2","/home/mohammad/stuff/projects/react-projects/ecommerce/src/reportWebVitals.js":"3","/home/mohammad/stuff/projects/react-projects/ecommerce/src/components/Home.jsx":"4","/home/mohammad/stuff/projects/react-projects/ecommerce/src/components/Product.jsx":"5","/home/mohammad/stuff/projects/react-projects/ecommerce/src/components/Header.jsx":"6","/home/mohammad/stuff/projects/react-projects/ecommerce/src/components/Cart.jsx":"7","/home/mohammad/stuff/projects/react-projects/ecommerce/src/components/MainProduct.jsx":"8"},{"size":500,"mtime":1611056706271,"results":"9","hashOfConfig":"10"},{"size":1573,"mtime":1611231631272,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1611056706283,"results":"12","hashOfConfig":"10"},{"size":1122,"mtime":1611234786652,"results":"13","hashOfConfig":"10"},{"size":4670,"mtime":1611231329380,"results":"14","hashOfConfig":"10"},{"size":875,"mtime":1611234681731,"results":"15","hashOfConfig":"10"},{"size":1082,"mtime":1611234376371,"results":"16","hashOfConfig":"10"},{"size":578,"mtime":1611237900873,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"195tpbd",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/mohammad/stuff/projects/react-projects/ecommerce/src/index.js",[],["37","38"],"/home/mohammad/stuff/projects/react-projects/ecommerce/src/App.js",["39"],"import { useEffect, useState } from \"react\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport Product from \"./components/Product\";\nimport Header from \"./components/Header\";\nimport Cart from \"./components/Cart\";\n\nfunction App() {\n  const [error, setError] = useState(null); //errors\n  const [isLoaded, setIsLoaded] = useState(false); //isLoaded\n  const [products, setProducts] = useState([]); //products\n\n  const [cart, setCart] = useState([]);\n\n  console.log(cart);\n\n  useEffect(() => {\n    fetch(\"https://fakestoreapi.com/products\")\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setProducts(result);\n        },\n\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  return (\n    <Router>\n      <Header cart={cart} />\n      <Switch>\n        <Route path=\"/products/:productId\">\n          <Product setCart={setCart} cart={cart}/>\n        </Route>\n        <Route path=\"/cart\">\n          <Cart cart={cart} products={products}/>\n        </Route>\n        <Route exact path=\"/\">\n          <div>\n            {error ? (\n              <div className=\"text-red-500 text-xl\">Error: {error.message}</div>\n            ) : !isLoaded ? (\n              <div className=\"text-xl text-blue-500\">loading...</div>\n            ) : (\n              <Home products={products} />\n            )}\n          </div>\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","/home/mohammad/stuff/projects/react-projects/ecommerce/src/reportWebVitals.js",[],"/home/mohammad/stuff/projects/react-projects/ecommerce/src/components/Home.jsx",["40"],"/home/mohammad/stuff/projects/react-projects/ecommerce/src/components/Product.jsx",["41","42","43"],"import { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\n\nexport default function Product(props) {\n  // path name params\n  const { productId } = useParams();\n\n  // quantity of products to add to cart\n  const [quantity, setQuantity] = useState(1);\n\n  // product fetching requirements' states\n  const [product, setProduct] = useState({});\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    // fetching product by id provided with path name\n    fetch(`https://fakestoreapi.com/products/${productId}`)\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setProduct(result);\n        },\n\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, []);\n\n  // style of left arrow based on quantity -- can't be less than 1\n  const leftArrowStyle =\n    quantity > 1\n      ? \"text-4xl font-bold mr-2 p-2 rounded-sm border hover:bg-black hover:text-white\"\n      : \"text-4xl font-bold mr-2 p-2 rounded-sm border border-gray-200 text-gray-200 cursor-not-allowed\";\n\n\n  // props\n  const { setCart, cart } = props;\n  return (\n    <div className=\"\">\n      {error ? (\n        <div className=\"text-red-500 font-bold text-lg\">{error}</div>\n      ) : !isLoaded ? (\n        <div className=\"text-blue-500 font-bold text-lg\">Loading...</div>\n      ) : (\n        <div className=\"m-auto mt-20 px-20 md:px-40 flex justify-center flex-wrap md:flex-nowrap\">\n          <div>\n            <img\n              className=\"max-h-80 max-w-xs mb-2 object-cover\"\n              src={product.image}\n            />\n          </div>\n          <div className=\"flex flex-wrap mx-20\">\n            <div className=\"flex flex-col justify-center mr-20\">\n              <p className=\"text-sm\">Category: {product.category}</p>\n              <h2 className=\"font-bold my-4\">{product.title}</h2>\n              <p className=\"\">\n                Price: <b>${product.price}</b>\n              </p>\n              <div className=\"flex my-8\">\n                <div className=\"cursor-pointer mr-4 w-10 h-10 bg-blue-500 rounded-4\"></div>\n                <div className=\"cursor-pointer mr-4 w-10 h-10 bg-red-500 rounded-4\"></div>\n                <div className=\"cursor-pointer mr-4 w-10 h-10 bg-green-500 rounded-4\"></div>\n              </div>\n            </div>\n            <div className=\"min-w-sm flex flex-col justify-center items-center\">\n              <button\n                onClick={() => {\n                  let founded = false;\n                  cart.forEach(item => {\n                    if (item.id === product.id) founded = true;\n                  })\n\n                  if (founded) {\n                    // update quantity\n                    let newCart = cart.map(item => {\n                      if (item.id === product.id) {\n                        console.log(\"before: \", item);\n                        item.quantity += quantity\n                        console.log(\"after: \", item);\n                      }\n                      return item;\n                    })\n                    setCart(newCart)\n                    console.log(\"updated: \", newCart);\n                  } else {\n                    // add to cart\n                    let newItem = {\n                      id: product.id,\n                      title: product.title,\n                      quantity: quantity\n                    }\n                    setCart(cart => [...cart, newItem])\n                    console.log(\"new item added: \", newItem);\n                  }\n                }}\n                className=\"border border-gray-800 hover:bg-black hover:text-white p-4\"\n              >\n                Add to cart <b>&middot;</b> ${product.price * quantity}\n              </button>\n              <div className=\"px-4 my-4\">\n                <button\n                  onClick={() => {\n                    setQuantity(quantity - 1);\n                  }}\n                  disabled={!(quantity > 1)}\n                  className={leftArrowStyle}\n                >\n                  &#8249;\n                </button>\n                <span className=\"text-2xl leading-loose font-bold mx-2\">\n                  {quantity}\n                </span>\n                <button\n                  onClick={() => {\n                    setQuantity(quantity + 1);\n                  }}\n                  className=\"text-4xl font-bold ml-2 p-2 rounded-sm border hover:bg-black hover:text-white\"\n                >\n                  &#8250;\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","/home/mohammad/stuff/projects/react-projects/ecommerce/src/components/Header.jsx",[],"/home/mohammad/stuff/projects/react-projects/ecommerce/src/components/Cart.jsx",["44"],"/home/mohammad/stuff/projects/react-projects/ecommerce/src/components/MainProduct.jsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":35,"nodeType":"51","messageId":"52","endLine":2,"endColumn":39},{"ruleId":"53","severity":1,"message":"54","line":12,"column":13,"nodeType":"55","endLine":15,"endColumn":15},{"ruleId":"49","severity":1,"message":"50","line":2,"column":21,"nodeType":"51","messageId":"52","endLine":2,"endColumn":25},{"ruleId":"56","severity":1,"message":"57","line":31,"column":6,"nodeType":"58","endLine":31,"endColumn":8,"suggestions":"59"},{"ruleId":"53","severity":1,"message":"54","line":51,"column":13,"nodeType":"55","endLine":54,"endColumn":15},{"ruleId":"60","severity":1,"message":"61","line":14,"column":10,"nodeType":"55","endLine":14,"endColumn":56},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'productId'. Either include it or remove the dependency array.","ArrayExpression",["64"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [productId]",{"range":"67","text":"68"},[847,849],"[productId]"]